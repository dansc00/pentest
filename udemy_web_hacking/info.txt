MODELO TCP-IP E O HTTP

O modelo TCP-IP é o que possibilita a comunicação entre máquinas, através de endereços padronizados. É formado por 5 camadas com diferentes protocolos atuando 
em cada uma delas.

Camada de aplicação = parte que interage diretamente com o software, utiliza protocolos como http, ftp e ssh
Camada de transporte = garante a movimentação de dados, utiliza os protocolos TCP e UDP
Camada de internet = garante endereçamento, utiliza os protocolos IPV4 e IPV6
Camada física = utiliza protocolos como ethernet e wifi

Protocolo TCP = garante que os dados cheguem ao destino de maneira segura. Funcionamento baseado no método chamado Three Way Handshake. No qual é enviado
um pacote TCP SYN a uma porta específica na máquina de destino para detectar se existe serviço disponivel. A máquina retorna um pacote TCP SYN/ACK que responde
a origem. Por fim a maquina de origem envia um pacote TCP ACK que irá gerar conexão.

PORTAS: operam serviços, existe uma padronização de portas de 0 a 1024 que rodam serviços específicos como 
80(http)
443(https)
22(ssh)
21(ftp)... 

HTTP = trabalha sobre o TCP, realiza requisições e respostas web


Cookies = variáveis salvas para manter dados do cliente, um cookie possui parâmetros que podemos ver na parte de cookies em ferramenta do desenvolvedor. Permanecem do lado do cliente

Sessão = existem cookies que armazenam informações da seção que está sendo acessada no servidor pelo cliente. A captura de seções de outros usuários, pode permitir
realizar autenticação, substituindo o valor da seção no parâmetro em ferramentas do desenvolvedor, pelo valor da seção de um usuário já logado. Permanecem do lado do servidor
------------------------------------------------------------------------------------------------------------------------------------------------------
COLETA DE INFORMAÇÃO

Ativa - quando existe conexão direta com o alvo. Pode gerar logs em caso de análises agressivas que podem resultar em bloqueio de acesso pelo servidor
Passiva - busca de informações públicas, sem estabelecer conexão direta com o alvo inicialmente

NMAP

ferramenta de scan ativa.

NSLOOKUP e DIG

Realizam busca por servidores em hosts, dns, email, etc

Zona de transferência = backup realizado de um servidor DNS para outro servidor. Caso não seja configurado de forma correta, pode vazar servidores internos.

ex com DIG utilizando o host habilitado para teste zonetransfer.me

dig zonetransfer.me -t ns (extrai servidores DNS)
dig axfr zonetransfer.me @dns_server (gera resultado caso o servidor esteja realizando transfêrencia de zona)

NIKTO
scanner de vulnerabilidades em aplicações web

Sublist3r
scanner de subdominios

ANÁLISE MANUAL
pode ser feita pelo zap da owasp, selecionando a opcão manual e indicando o host alvo. Analisar campos de interação com a aplicação, considerando por exemplo
campos de pesquisa, interações de informação com servidor e etc
------------------------------------------------------------------------------------------------------------------------------------------------------
Cross Site Script(XSS reflected)
injeção de html, consiste na utilização de falhas em sites, para alterar o código através da inserção de scripts maliciosos que podem ser acessados por
clientes externos de outras máquinas. Acesso ocorre pelo browser. Ocorrem geralmente em locais de inserção de dados que são espelhados novamente 
em outra página, ocorre pela falha de sanitização de dados, como permitir inserir tags html dentro de campos como senhas e etc. Existem 3 tipos de XSS

Cross Site Script Refletido
injeção de script de forma não permanente. Utilizamos a ferramenta DVWA do metasploitable para testes
exemplos: utilizando o método alert(document.cookie) pode capturar o cookie de usuários com privilégio de sistema, inserindo o script que contém
uma inserção fake de imagem utilizando o DOM do js(arquivo nesse diretório), abrimos uma conexão na porta 80 pelo netcat, inserimos o script no campo
com falha xss e é retornado a requisição GET contendo os dados de cookies do usuário. Podemos utilizar o ngrok para receber conexão externa a rede local,
podendo afetar sites gerais na web. Ao copiarmos o conteúdo afetado em url, podendo usar um encurtador de url ou grabify etc, ao enviarmos para um alvo,
quando é realizado acesso pelo alvo, recebemos automaticamente as informações de cookie de sessão do alvo, que podem ser substituidas utilizando a aba cookies
nas ferramentas do desenvolvedor, roubando assim a sessão de usuário da vítima. Outros tipos de ataque podem ser realizados, como redirecionamento de página,
podendo jogar o alvo em páginas fake etc.

Cross Site Script Armazenado ou Permanente(XSS storage)
ao contrário do refletido, não é necessário utilizar o link da requisição para ataque, pois a alteração é permanente pois é armazenada no site. Como por exemplo 
uma inserção de script em comentários de blogs, q são armazenados em banco de dados, o script será executado para qualquer acesso e para todas as vezes que a página
for acessada.
Sites bem protegidos, possuem métodos de tratamento de dados que tentam impedir a inserção de código executável na página. Nesses casos, existem alguns
bypass que podem ser testados para driblar a segurança. O site da PortSwigger possui payloads com variações de código para tags especificas do html que podem
ser utilizadas(buscar port swigger cheat sheet xss). Utilizando o Zap, podemos acessar a pasta na qual está ocorrendo as requisições e acessar as req POST 
na aba requisição. Clicando com o botão direito e acessando a opção fuzz, conseguimos modificar requisições,selecionando o campo a ser alterado e 
passando strings ou arquivos de texto com variações de entrada para teste(similar ao repeater do Burp)

Cross Site Script DOM(XSS DOM)
diferente dos outros tipos, essa versão não interage do lado do servidor, mas apenas do cliente. Consiste na exploração de injeção de scripts baseados
no DOM(Document Object Model), que possibilita alteração no html, css e elementos da página, através de código javascript

Defesas contra ataques XSS
O site da OWASP disponibiliza tutoriais com os principais procedimentos para evitar falha em aplicações web
------------------------------------------------------------------------------------------------------------------------------------------------------
SQL Injection
SQL (Structured Query Language) é uma linguagem criada para realizar consultas a banco dados. A linguagem de programação que roda do lado do server,
realiza requisições utilizando o SQL. 

Query SQL
ex: SELECT <coluna> FROM <tabela> WHERE <condição>, utilizando o comando mysql em linha de comando, podemos acessar o ambiente de banco de dados
de uma aplicação que opera utilizando MySql

exemplos de operadores: AND as 2 condições devem ser aceitas, OR 1 das condições deve ser aceita, UNION une resultados para consultas com a msm quantia de colunas

Injeção de SQL
Semelhante ao XSS, requisições que utilizam banco de dados, podem sofrer injeção de código, dessa vez SQL,para retornar informações sobre o banco de dados

Tipos de teste
baseado em erro - ao injetar código a aplicação retorna um erro no lado do cliente
teste booleano - ao inserir dado é verificado se é verdadeiro ou falso, como por exemplo o teste decrescente de id para descobrir quantos registros estão presentes
na tabela

Teste Baseado em erro - Podemos testar o comportamento da resposta de erro retornada por um campo, testando possibilidades até encontrar um retorno
verdadeiro, utilizando técnicas como inserção de códigos lógicos com aspas simples e # que é o caracter de comentário

Estrutura de uma base de dados SQL
uma base de dados SQL é formada por bancos que por sua vez são formados por colunas contendo os dados armazenados

Union Based SQL
Utilizando o comando UNION podemos usar injeção SQL para listar outras tabelas e colunas presentes no banco de dados. Primeiramente devemos identificar
quantas colunas estão sendo utilizadas, já que o UNION só funciona para unir tabelas com mesma quantidade de colunas. Para isso podemos utilizar o comando
ORDER by x, que irá enumerar as colunas de uma tabela, quando um valor maior que o máximo for requerido, será retornado um erro.

ex no dvwa: 1' ORDER by 2 = 'A'#

para passar colunas a serem buscadas por SELECT, podemos utilizar o parâmetro NULL para preencher colunas extras e evitar erro por numero de colunas inválido


